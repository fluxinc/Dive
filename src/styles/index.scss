@use "generated-theme" as *;

@use "./components/Popup/AdvancedSetting";
@use "./components/Header";
@use "./components/ModelConfig";
@use "./components/HistorySidebar";
@use "./components/Sidebar";
@use "./components/Toast";
@use "./components/Tooltip";
@use "./components/InfoTooltip";
@use "./components/ThemeSwitch";
@use "./components/PopupWindow";
@use "./components/PopupConfirm";
@use "./components/Switch";
@use "./components/CheckBox";
@use "./components/Select";
@use "./components/DropDown";
@use "./components/Keymap";
@use "./pages/Welcome";
@use "./pages/Chat";
@use "./pages/DocumentUpload";
@use "./overlay/Overlay";
@use "./overlay/Tools";
@use "./overlay/Model";
@use "./overlay/System";
@use "./overlay/SourcePanel";

* {
  box-sizing: border-box;
}

html, body {
  width: 100%;
  max-width: 100%;
  overflow-x: hidden;
}

body {
  margin: 0;
  padding: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  display: flex;
  justify-content: center;
  background: var(--bg);
  color: var(--text);
  width: 100%;
  overflow-x: hidden;
}

// Invert logo in light mode
.corner-logo img {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transform: translateZ(0);
  isolation: isolate;
  opacity: 0.4;
}

// We're now handling logo inversion directly in the React component
// No CSS rules needed for theme-based inversion

#root {
  width: 100%;
  height: 100vh;
  max-height: 100vh;
  overflow: hidden;
}

.app-container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  color: var(--text);
  overflow: hidden;
}

.app-content {
  display: flex;
  flex: 1;
  overflow: hidden;
}

.outlet-container {
  display: flex;
  flex: 1;
  position: relative;
  overflow: hidden;
}

@media (max-width: $breakpoint-s) {
  #root, 
  .app-container,
  .app-content,
  .outlet-container {
    overflow: hidden;
    height: 100%;
  }
}

.main-container {
  display: flex;
  flex: 1;
  justify-content: center;
  align-items: center;
  min-height: calc(100vh - $header-height);
  padding: 20px;
  color: var(--text);
  
  @media (max-width: $breakpoint-s) {
    padding: 10px;
  }
}

.beta-overlay {
  color: rgba(0, 0, 0, 0.5);
  padding: 4px 8px;
  border-radius: 4px;
  font-weight: bold;
  pointer-events: none;
  transform: translateZ(0);
  user-select: none;
  isolation: isolate;
}

[data-theme='dark'] .beta-overlay {
  color: rgba(255, 255, 255, 0.5);
}
